{"ast":null,"code":"var _jsxFileName = \"/home/lacallaway98/Springboard/react/react-jokes-classes/src/FunctionalJokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FunctionalJoke from \"./FunctionalJoke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionalJokeList = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /* retrieve jokes from API */\n  useEffect(() => {\n    getJokes();\n  }, []);\n  const getJokes = async () => {\n    try {\n      // load jokes one at a time, adding not-yet-seen jokes\n      setIsLoading(true);\n      let seenJokes = new Set();\n      let jokes = [];\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          ...joke\n        } = res.data;\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({\n            ...joke,\n            votes: voteCount\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      setIsLoading(false);\n      setJokes(jokes);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  const vote = (id, delta) => {\n    setJokes(st => ({\n      jokes: st.jokes.map(j => j.id === id ? {\n        ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  };\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: () => getJokes(),\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(FunctionalJoke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n_s(FunctionalJokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = FunctionalJokeList;\nexport default FunctionalJokeList;\nvar _c;\n$RefreshReg$(_c, \"FunctionalJokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","FunctionalJoke","jsxDEV","_jsxDEV","FunctionalJokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","seenJokes","Set","length","res","get","headers","Accept","joke","data","has","id","add","push","votes","voteCount","console","log","err","error","vote","delta","st","map","j","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/home/lacallaway98/Springboard/react/react-jokes-classes/src/FunctionalJokeList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport FunctionalJoke from \"./FunctionalJoke\";\r\nimport \"./JokeList.css\";\r\n\r\n/** List of jokes. */\r\n\r\nconst FunctionalJokeList = ({numJokesToGet = 5}) => {\r\n\r\n    const [jokes, setJokes] = useState([]) \r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    /* retrieve jokes from API */\r\n    useEffect(() => {\r\n        getJokes()\r\n    }, [])\r\n\r\n    const getJokes = async() => {\r\n        try {\r\n            // load jokes one at a time, adding not-yet-seen jokes\r\n            setIsLoading(true)\r\n            let seenJokes = new Set();\r\n            let jokes = []\r\n            while (jokes.length < numJokesToGet) {\r\n                    \r\n                let res = await axios.get(\"https://icanhazdadjoke.com\", {\r\n                    headers: { Accept: \"application/json\" }\r\n                });\r\n                let { ...joke } = res.data;\r\n\r\n                if (!seenJokes.has(joke.id)) {\r\n                    seenJokes.add(joke.id);\r\n                    jokes.push({...joke, votes: voteCount });\r\n            } else {\r\n                console.log(\"duplicate found!\");\r\n            }\r\n            }\r\n            setIsLoading(false);\r\n            setJokes(jokes)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n  /* change vote for this id by delta (+1 or -1) */\r\n\r\n  const vote = (id, delta) => {\r\n    setJokes(st => ({\r\n      jokes: st.jokes.map(j =>\r\n        j.id === id ? { ...j, votes: j.votes + delta } : j\r\n      )\r\n    }));\r\n  }\r\n\r\n  /* render: either loading spinner or list of sorted jokes. */\r\n\r\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"loading\">\r\n          <i className=\"fas fa-4x fa-spinner fa-spin\" />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"JokeList\">\r\n        <button\r\n          className=\"JokeList-getmore\"\r\n          onClick={() => getJokes()}\r\n        >\r\n          Get New Jokes\r\n        </button>\r\n\r\n        {sortedJokes.map(j => (\r\n          <FunctionalJoke\r\n            text={j.joke}\r\n            key={j.id}\r\n            id={j.id}\r\n            votes={j.votes}\r\n            vote={vote}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default FunctionalJokeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}